1. what is AWS?
- aws is a cloud provider.
- it is on demand.
- netflix uses aws.

2. how to choose region? what is AZ?
- depends on you location & regions that are far away have more latency.
- all regions do not have all services so choose according to the requirement.
- regions have AZs.	-- min AZs=3 & max AZs=6
- each AZ has different data centers having power, n/w & connectivity.
- AZ are isolated from each other and have low latency, all this together are form/called region.
- services are region specific or can be global like s3.


######################
IAM
######################

• IAM = Identity and Access Management.
• Global service
• Root account created by default.
• Users are people within your organization, and can be grouped
• Groups only contain users, not other groups
• Users don’t have to belong to a group, and user can belong to multiple groups.

3. what is IAM roles?
- Some AWS service will need to perform actions on your behalf.
- To do so, we will assign permissions to AWS services with IAM Roles
- Common roles: • EC2 Instance Roles • Lambda Function Roles • Roles for CloudFormation 

4. IAM security tools?
• IAM Credentials Report (account-level)
- a report that lists all your account's users and the status of their various credentials.
- info like when was user created, when he changed password, last login, etc in your whole account.
- IAM << access report << credential report.

• IAM Access Advisor (user-level)
- it shows the service permissions granted to a user & when those services were last accessed.	
- You can use this information to revise your policies.

5. what is IAM identity provider/idp?		****************************************************************************
- IAM identity providers help keep your AWS account secure.
- you don't have to distribute or embed long-term security credentials, such as access keys, in your application. 
- To use an IdP, you create an IAM identity provider entity to establish a trust relationship between your AWS account and the IdP.
						****************************************************************************




######################
EC-2
######################

1. what is EC2?
• EC2 is one of the most popular of AWS’ offering
• EC2 = Elastic Compute Cloud = Infrastructure as a Service
• It mainly consists in the capability of :
- Renting virtual machines (EC2)
- Storing data on virtual drives (EBS)
- Distributing load across machines (ELB)
- Scaling the services using an auto-scaling group (ASG)


2. EC2 & config option.
• Operating System (OS): Linux, Windows or Mac OS 
• How much compute power & cores (CPU) 
• How much random-access memory (RAM) 
• How much storage space: 
- Network-attached (EBS & EFS) 
- hardware (EC2 Instance Store) 
• Network card: speed of the card, Public IP address 
• Firewall rules: security group 
• Bootstrap script (configure at first launch): EC2 User Data 

3. what is userdata/bootstrap?
• It is possible to bootstrap our instances using an EC2 User data script.
• bootstrapping means launching commands when a machine starts
• That script is only run once at the instance first start
• EC2 user data is used to automate boot tasks such as:
- Installing updates
- Installing software
- Downloading common files from the internet
• The EC2 User Data Script runs with the root user
#!/bin/bash
#!/bin/bash
# Use this for your user data (script from top to bottom)
# install httpd (Linux 2 version)
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html


4. EC-2 instance type example.
Instance 	vCPU 	Mem (GiB) 	Storage		NetworkPerformance	EBS Bandwidth
(Mbps)
t2.micro 	1 	1		 EBS-Only	 Low to Moderate
t2.xlarge 	4	16 		 EBS-Only 	 Moderate
c5d.4xlarge 	16 	32 		 1x400 NVMe-SSD  Up to 10 Gbps 		4,750
r5.16xlarge 	64 	512 		 EBS Only 	 20 Gbps 		13,600
m5.8xlarge 	32 	128 		 EBS Only 	 10 Gbps 		6,800


5. EC2 Instance Types:-
- GP	-- Great for a diversity of workloads such as web servers or code repositories, give Balance between: compute, memory & storage.
- CO	-- Great for compute-intensive tasks that require high performance processors, used for High performance web servers.
- MO	-- Fast performance for workloads that process large data sets in memory, used for relational/non-relational databases.
- SO	-- Great for storage-intensive tasks that require high, sequential read/write access to large data sets on local storage.
- AC
- IF (instance feature)
- Measuring instance performance
• m5.2xlarge:
- m= instance class
- 5= generation (AWS improves them over time)
- 2xlarge= size within the instance class

6. what is security group?
• Security Groups are the fundamental of network security in AWS
• They control how traffic is allowed into or out of our EC2 Instances.
• Security groups only contain rules
• Security groups rules can reference by IP or by security group.
• Security groups are acting as a “firewall” on EC2 instances 
• They regulate: 
- Access to Ports 
- Authorised IP ranges – IPv4 and IPv6 
- Control of inbound & outbound  network (from other to the instance)
• Can be attached to multiple instances
• Locked down to a region / VPC combination
• Does live “outside” the EC2 – if traffic is blocked the EC2 instance won’t see it
• It’s good to maintain one separate security group for SSH access
• If your application is not accessible (time out), then it’s a security group issue
• If your application gives a “connection refused“ error, then it’s an application
error or it’s not launched
• All inbound traffic is blocked by default
• All outbound traffic is authorised by default
- 22 = SSH (Secure Shell) - log into a Linux instance
- 21 = FTP (File Transfer Protocol) – upload files into a file share
- 22 = SFTP (Secure File Transfer Protocol) – upload files using SSH
- 80 = HTTP – access unsecured websites
- 443 = HTTPS – access secured websites
- 3389 = RDP (Remote Desktop Protocol) – log into a Windows instance
• EC2 instance can be associated with up to 5 security groups.
• Each security group can have a maximum of 60 inbound and 60 outbound rules.


7. how to ssh into ec2 with terminal:
- ***We can’t use a private IP, because we are not in the same network***
- place ssh key file in same directory u are tryinh to work.
- chmod 0400 <keyname.pem>	-- to change permission for ssh login
- ssh -i <keyname.pem> ec2-user@publicip


8. ec2 instance types based on purchaing options?
• On-Demand Instances (high cost)– short workload, predictable pricing, pay by second
• Reserved (1 or 3 years)  (72% discount)	-- you reserve a specific instance attribute (instance type, region, tenancy, OS)
- Reserved Instances – long workloads
- Convertible Reserved Instances – long workloads with flexible instances
• Savings Plans (1 & 3 years) –commitment to an amount of usage, long workload
• Spot Instances (90% discount)– short workloads, cheap, can lose instances (less reliable)
• Dedicated Hosts
- A physical server with EC2 instance capacity fully dedicated to your use.
- ******No share of hardware in the same account******
- book an entire physical server, control instance placement.
• Dedicated Instances
- Instances run on hardware that’s dedicated to you.
- May share hardware with other instances in same account.
- no other customers will share your hardware.
- No control over instance placement.
• Capacity Reservations 
- Reserve On-Demand instances capacity in a specific AZ for any duration.
- no billing discounts
- *****You’re charged at On-Demand rate whether you run instances or not*****
- reserve capacity in a specific AZ for any duration


9. what is the capacity of m4large & m5large?
- m4.xlarge:
  vCPUs: 4
  RAM: 16 GiB
  Network Performance: Moderate
- m5.xlarge:
  vCPUs: 2
  RAM: 8 GiB
  Network Performance: Up to 10 Gigabit


11. what is spot fleet?
• Spot Fleets = set of Spot Instances + (optional) On-Demand Instances
• Can have multiple launch pools, so that the fleet can choose
• Spot Fleet stops launching instances when reaching capacity or max cost
• ****Spot Fleets allow us to automatically request Spot Instances with the lowest price****


12. public vs private ip?
• Public IP:
- Public IP means the machine can be identified on the internet (WWW)
- Must be unique across the whole web (not two machines can have the same public IP).
- Can be geo-located easily

• Private IP:
- Private IP means the machine can only be identified on a private network only
- The IP must be unique across the private network
- BUT two different private networks (two companies) can have the same IPs.
- Machines connect to WWW using a NAT + internet gateway (a proxy)
- Only a specified range of IPs can be used as private IP


13.  what is Elastic ip?
• When you stop and then start an EC2 instance, it can change its public IP.
• If you need to have a fixed public IP for your instance, you need an Elastic IP
• An Elastic IP is a public IPv4 IP you own as long as you don’t delete it
• You can attach it to one instance at a time
• With an Elastic IP address, you can mask the failure of an instance or software by rapidly remapping the address to another instance in your account.
• You can only have 5 Elastic IP in your account (you can ask AWS to increase that).
• Overall, try to avoid using Elastic IP:
- They often reflect poor architectural decisions
- Instead, use a random public IP and register a DNS name to it
- Or, as we’ll see later, use a Load Balancer and don’t use a public IP


14. what is placement group?
• Sometimes you want control over the EC2 Instance placement strategy
• That strategy can be defined using placement groups
• When you create a placement group, you specify one of the following
strategies for the group:
- Cluster— clusters instances into a low-latency group in a single Availability Zone

- Spread— spreads instances across underlying hardware (max 7 instances per group per AZ)
  * The instances in a spread share racks with the instances in the other partitions.

- Partition— spreads instances across many different partitions (which rely on different sets of racks) within an AZ. 
  * Scales to 100s of EC2 instances per group (Hadoop, Cassandra, Kafka)
  * The instances in a partition do not share racks with the instances in the other partitions


15. what is Elastic Network Interfaces (ENI)?
• can be attached from one instance to another give private of 1 instance to another. 
• Each ENI lives within a particular subnet of the VPC
• Logical component in a VPC that represents a virtual network card
• The ENI can have the following attributes:
- Primary private IPv4, one or more secondary IPv4
- One Elastic IP (IPv4) per private IPv4
- One Public IPv4
- One or more security groups
- A MAC address
• You can create ENI independently and attach them on the fly (move them) on EC2 instances for failover
• Bound to a specific availability zone (AZ)


16. what happens when you start instance?
• First start: the OS boots & the EC2 User Data script is run
• Following starts: the OS boots up
• Then your application starts


17. ec2 hibernate?
- ec2 << launch instance << advanced details (stop- hibernate behaviour=enable)
- ec2 << launch instance << storage << chose volume << encryted=true
- then choose instance << instance state << hibernate
• Supported Instance Families – C3, C4, C5, I3, M3, M4, R3, R4, T2, T3, …
• Instance RAM Size – must be less than 150 GB.
• Instance Size – not supported for bare metal instances.
• AMI – Amazon Linux 2, Linux AMI, Ubuntu, RHEL, CentOS & Windows…
• Root Volume – must be EBS, encrypted, not instance store, and large
• Available for On-Demand, Reserved and Spot Instances
• An instance can NOT be hibernated more than 60 days


18. What’s an EBS Volume?
• An EBS Volume is a network drive you can attach to your instances while they run
• It allows your instances to persist data, even after their termination
• They can only be mounted to one instance at a time (at the CCP level)
• They are bound to a specific availability zone (Az)
• but To move a volume across, you first need to snapshot it
• It can be detached from an EC2 instance and attached to another one quickly


19. what is EBS snapshot?
• Make a backup (snapshot) of your EBS volume at a point in time
• Not necessary to detach volume to do snapshot, but recommended
• Can copy snapshots across AZ or Region
- ec2 << volumes << select << create snapshot	-- create a snapshot from volume
- ec2 << snapshot << create snapshot << form-instance/from-volume	-- create a snapshot from instance/volume
- ec2 << snapshot << select << create-volume/create-image/copy-2-another-region/Az	-- create a volume/image/copy-snapshot


20. how to recover snapshot after delete?
- ec2 << snapshot << recycle-bin << Create retention rule << create that rule
- once this is done delete volume and go to recycle-bin and you can see there your delete snapshot,
- to recover click on recycle-bin << snapshot << recover



21. what is AMI?
• AMI = Amazon Machine Image
• AMIs are built for a specific AWS Region
• AMI are a customization of an EC2 instance
- You add your own software, configuration, operating system, monitoring…
- Faster boot / configuration time because all your software is pre-packaged
• AMI are built for a specific region (and can be copied across regions)
• You can launch EC2 instances from:
- A Public AMI: AWS provided
- Your own AMI: you make and maintain them yourself
- An AWS Marketplace AMI: an AMI someone else made (and potentially sells)

# Process to create AMI:-
• Start an EC2 instance and customize it
• Stop the instance (for data integrity)
• Build an AMI – this will also create EBS snapshots
• Launch instances from other AMIs
- ec2 << launch instance << actions << image & template << create-image/create-template-4m-instance	-- create AMIs
- AMI << actions << launch instance  or ec2 << launch-instance << a section of my ami tab will occure (choose it) << select key << SG << create instance.


22. what is EC2 instance store?
• EBS volumes are network drives with good but “limited” performance
• If you need a high-performance hardware disk, use EC2 Instance Store
• Better I/O performance
• EC2 Instance Store lose their storage if they’re stopped (ephemeral)
• Good for buffer / cache / scratch data / temporary content
• Risk of data loss if hardware fails
• Backups and Replication are your responsibility


23. types of EBS volumes?
• EBS Volumes come in 6 types:
- gp2 / gp3 (SSD): General purpose SSD volume that balances price and performance for a wide variety of workloads
- io1 / io2 (SSD): Highest-performance SSD volume for mission-critical low-latency or high-throughput workloads
- st1 (HDD): Low cost HDD volume designed for frequently accessed, throughput- intensive workloads
- sc1 (HDD): Lowest cost HDD volume designed for less frequently accessed workloads

• EBS Volumes are characterized in Size | Throughput | IOPS (I/O Ops Per Sec)
• Only gp2/gp3 and io1/io2 can be used as boot volumes

# General Purpose SSD:
• Cost effective storage, low-latency
• System boot volumes, Virtual desktops, Development and test environments
• 1 GiB - 16 TiB
• gp3:
- Baseline of 3,000-16,000 IOPS and throughput of 125-1000 MiB/s
• gp2:
- Small gp2 volumes can burst IOPS to 3,000
- max IOPS is 16,000
- Size of the volume and IOPS are linked.

# Provisioned IOPS (PIOPS) SSD
• Critical business applications with sustained IOPS performance
• Or applications that need more than 16,000 IOPS
• Great for databases workloads (sensitive to storage perf and consistency)
• io1/io2 (4 GiB - 16 TiB):
- Max PIOPS: 64,000 for Nitro EC2 instances & 32,000 for other
- Can increase PIOPS independently from storage size
- io2 have more durability and more IOPS per GiB (at the same price as io1)
• io2 Block Express (4 GiB – 64 TiB):
- Sub-millisecond latency
- Max PIOPS: 256,000 with an IOPS:GiB ratio of 1,000:1
- Supports EBS Multi-attach

# Hard Disk Drives (HDD) 
• Cannot be a boot volume 
• 125 GiB to 16 TiB 
- Throughput Optimized HDD (st1) 
- Big Data, Data Warehouses, Log Processing 
- Max throughput 500 MiB/s – max IOPS 500 
• Cold HDD (sc1): 
- For data that is infrequently accessed 
- Scenarios where lowest cost is important 
- Max throughput 250 MiB/s – max IOPS 250



24. can you attach multi volumes to one instance?
- yes we can do so, using io1/io2 family SSD.
• Attach the same EBS volume to multiple EC2 instances in the same AZ
• Each instance has full read & write permissions to the high-performance volume
• can only be possible in one AZ not outside.
• Use case:
- Achieve higher application availability in clustered Linux applications (ex: Teradata)
- Applications must manage concurrent write operations
• Up to 16 EC2 Instances at a time
• Must use a file system that’s cluster-aware (not XFS, EXT4, etc…) 



25. how to encrypt an unencrypted EBS volume?
• Create an EBS snapshot of the volume
• Encrypt the EBS snapshot ( using copy )	--encrypt this snapshot= true	-- choose KMS-key
• Create new ebs volume from the snapshot ( the volume will also be encrypted )
• Now you can attach the encrypted volume to the original instance

or
- select unencrypted snapshot << actions << create volume form snapshot << enable encryption & choose kms key << create



26. what is Elastic File System?
- EFS << create << customised << in n/w access remove sg & create new sg & attach them in EFS mount target << create.
- launch 2 instance << in config setting select subnet u want & config setting choose efs option with Add shared file system.
- ssh/connect in both instance & check /mnt/efs/fs1/ file presence.
- Do - sudo su, create a file using echo "hello" > /mnt/efs/fs1/hello.txt & check via - cat /mnt/efs/fs1/hello.txt
- go into 2nd instance and cat /mnt/efs/fs1/hello.txt, you should see the files create in 1st instance 
• Managed NFS (network file system) that can be mounted on many EC2
• EFS works with EC2 instances in multi-AZ
• Highly available, scalable, expensive (3x gp2), pay per use
• Uses NFSv4.1 protocol
- Uses security group to control access to EFS
- Compatible with Linux based AMI (not Windows)
- Encryption at rest using KMS

- POSIX file system (~Linux) that has a standard file API
- File system scales automatically, pay-per-use, no capacity planning!


27. EFS storage classes? when should you use EFS?
• Storage Tiers (lifecycle management feature – move file after N days) 
- Standard: for frequently accessed files 
- Infrequent access (EFS-IA): cost to retrieve files, lower price to store. Enable EFS-IA with a Lifecycle Policy

• Availability and durability 
- Standard: Multi-AZ, great for prod 
- One Zone: One AZ, great for dev, backup enabled by default, compatible with IA (EFS One Zone-IA)

• Over 90% in cost savings


28. 	EBS 				               vs		             EFS				        vs		           Instance storage
- 1. used for 1 instance only.			  1. used for multiple instances.			1. it is physically attached to instance,
  2. can be used only for single AZs.	2. can be used in multiple AZs.			   so if you lose instance you'll loss
  3. can be used for any instance.		3. only used for linux instances.		   all the data.
  4. low cost					                4. high cost.
  5. limited storage				          5. unlimited storage.
  6. faster than EBS				          6. slower.






#######
ELB & AutoScaling:
#######


1. what is Scalibility?
• Scalability means that an application / system can handle greater loads by adapting.
• There are two kinds of scalability:
- Vertical Scalability	-- means increasing the size of the instance e.i: form t2.micro to t2.large
- Horizontal Scalability-- means increasing the number of instances / systems for your application

• Scalability is linked but different to High Availability



2. what is High Availability?
• High Availability: Run instances for the same application across multi AZ
• High Availability usually goes hand in hand with horizontal scaling
• High availability means running your application / system in at least 2 data centers (== Availability Zones)
• The goal of high availability is to survive a data center loss



3. what is load balancing? why use it?
• Load Balances are servers that forward traffic to multiple servers (e.g., EC2 instances) downstream

*USED CASES:
• Spread load across multiple downstream instances 
• Expose a single point of access (DNS) to your application 
• Seamlessly handle failures of downstream instances 
• Do regular health checks to your instances 
• Provide SSL termination (HTTPS) for your websites 
• High availability across zones 
• Separate public traffic from private traffic



4. what is health check? types?
• Health Checks are crucial for Load Balancers
• They enable the load balancer to know if instances it forwards traffic to are available to reply to requests
• The health check is done on a port and a route (/health is common)
• If the response is not 200 (OK), then the instance is unhealthy

*types:
1. Classic Load Balancers
• Supports TCP (Layer 4), HTTP & HTTPS (Layer 7)
• Health checks are TCP or HTTP based
• Fixed hostname eg: XXX.region.elb.amazonaws.com

2. Application Load Balancer
• Application load balancers is Layer 7 (HTTP)
• Load balancing to multiple HTTP applications across machines (target groups)
• Load balancing to multiple applications on the same machine (ex: containers)
• Support for HTTP/2 and WebSocket
• Support redirects (from HTTP to HTTPS for example)
• ALB are a great fit for micro services & container-based application
• Has a port mapping feature to redirect to a dynamic port in ECS
• Routing tables to different target groups:
- Routing based on path in URL (example.com/users & example.com/posts)
- Routing based on hostname in URL (one.example.com & other.example.com)
- Routing based on Query String, Headers
• target group for ALB:
- EC2 instances – HTTP
- ECS tasks – HTTP
- Lambda functions – HTTP request is translated into a JSON event
- IP Addresses – must be private IPs
- ALB can route to multiple target groups
- Health checks are at the target group level


3. N/w load balancer
• Network load balancers (Layer 4) allow to:
- Forward TCP & UDP traffic to your instances
- Handle millions of request per seconds
- Less latency ~100 ms (vs 400 ms for ALB)
• NLB has one static IP per AZ, and supports assigning Elastic IPS
• NLB are used for extreme performance, TCP or UDP traffic
• Not included in the AWS free tier
• target group for ALB:
- EC2 instances
- IP Addresses – must be private IPs
- Application Load Balancer
- Health Checks support the TCP, HTTP and HTTPS Protocols


4. Gateway loadbalancer
• Deploy, scale, and manage a fleet of 3rd party network virtual appliances in AWS
• Operates at Layer 3 (Network Layer) – IP Packets
• Uses the GENEVE protocol on port 6081
• target group for ALB:
- EC2 instances
- IP Addresses – must be private IPs




5. what is a target group?
- target group is a group of EC2 instance


6. how to setup traffic only to access form ALB dns link and not fro ec2 public ip?
- ec2 << security group << inbound rules << edit << remove httpd << add new rule http with custom option << source= choose ALB SG.


7. how to setu rules for ALB in for redirection?
- EC2 << Load balancers << demo-ALB << HTTP:80 listener << add rules << name << add condition with value= eg:/error (if) << action (then)  << save
- hit ALB dns link with /error


8. what is Healthy threshold & Unhealthy threshold?
• The number of consecutive health checks successes required before considering an unhealthy target healthy.
• The number of consecutive health check failures required before considering a target unhealthy.



9. what is Sticky Sessions (Session Affinity)?
• It is possible to implement stickiness so that the same client is always redirected to the same instance behind a load balancer
• This works for Classic Load Balancer, ALB & NLB
• For both CLB & ALB, the “cookie” used for stickiness has an expiration date you control
•** Use case: make sure the user doesn’t lose his session data
• Enabling stickiness may bring imbalance to the load over the backend EC2 instances



10. types of cookies?
• Application-based Cookies
- • Custom cookie - Generated by the target  -- Don’t use AWSALB, AWSALBAPP, or AWSALBTG 
- • Application cookie - Generated by the load balancer -- Cookie name is AWSALBAPP
• Duration-based Cookies
- Cookie generated by the load balancer -- Cookie name is AWSALB for ALB, AWSELB for CLB


11. what is Cross-Zone Load Balancing
• used to distribute the traffic from in multiple AZs equally.
- eg: in 4 AZ there are 6 instance and in 2nd there are 5, it will send equal % of traffic to each instance, no more no less
- EC2 << Load balancers << name of ELB	<< attributes << Edit load balancer attributes

• Classic Load Balancer 
- Disabled by default 
- No charges for inter AZ data if enabled

• Application Load Balancer 
- Enabled by default (can be disabled at the Target Group level) 
- No charges for inter AZ data 

• Network Load Balancer & Gateway Load Balancer 
- Disabled by default 
- You pay charges ($) for inter AZ data if enabled 


12. what is SSL/TLS?
• An SSL Certificate allows traffic between your clients and your load balancer

• SSL refers to Secure Sockets Layer, used to encrypt connections
• TLS refers to Transport Layer Security, which is a newer version
• Nowadays, TLS certificates are mainly used, but people still refer as SSL

• Public SSL certificates are issued by Certificate Authorities (CA)
- eg:- Comodo, Symantec, GoDaddy, GlobalSign, Digicert, Letsencrypt, etc… 
• SSL certificates have an expiration date (you set) and must be renewed



13. how to enable SSL in ALB & NLB ? how SSL work with loadbalancer in http server? loadbalancer with SSL?
- EC2 << Load balancers << name of ELB << listner and rules << add rules << https-443 << forward-to-TG << create

- user send req on https << it connects to ur ELB << ELB does SSL certificate termination << & talks to backend EC2 using http via VPC.

• The load balancer uses an X.509 certificate (SSL/TLS server certificate)
• You can manage certificates using ACM (AWS Certificate Manager)
• You can create upload your own certificates alternatively


14. what is a listener in ELB & target group?
- A listener is a process that checks for connection requests, using the protocol and port that you configure.
- The rules that you define for a listener determine how the load balancer routes requests to the targets in one or more target groups.



15. what is e SNI (Server Name Indication) in HTTPS listener?
• SNI solves the problem of loading multiple SSL certificates onto one web server (to serve multiple websites)
• requires the client to indicate the hostname of the target server in the initial SSL handshake
- The server will then find the correct certificate, or return the default one
Note:
• Only works for ALB & NLB (newer generation), CloudFront



16. Elastic Load Balancers – SSL Certificates
• Classic Load Balancer (v1)
- Support only one SSL certificate
- Must use multiple CLB for multiple hostname with multiple SSL certificates

• Application Load Balancer (v2)
- Supports multiple listeners with multiple SSL certificates
- Uses Server Name Indication (SNI) to make it work

• Network Load Balancer (v2)
- Supports multiple listeners with multiple SSL certificates
- Uses Server Name Indication (SNI) to make it work



17. what is Connection Draining ELB?
• Feature naming
1) Connection Draining – for CLB
2) Deregistration Delay – for ALB & NLB

• Time to complete “in-flight requests” while the instance is de-registering/unhealthy
• Stops sending new requests to the EC2 instance which is de-registering

• Between 1 to 3600 seconds (default: 300seconds)

• Can be disabled (set value to 0)
• Set to a low value if your requests are short




#######
AutoScaling:
#######




1. what is the use of Auto Scaling Group (ASG)?
• Scale out (add EC2 instances) to match an increased load
• Scale in (remove EC2 instances) to match a decreased load
• Ensure we have a minimum and a maximum number of EC2 instances running
• Automatically register new instances to a load balancer
• Re-create an EC2 instance in case a previous one is terminated (ex: if unhealthy)



2. auto scaling? and it components?
• A Launch Template (older “Launch Configurations” are deprecated)
- AMI + Instance Type
- EC2 User Data
- EBS Volumes
- Security Groups
- SSH Key Pair
- IAM Roles for your EC2 Instances
- Network + Subnets Information
- Load Balancer Information

• Min Size / Max Size / Initial Capacity
• Scaling Policies



3. types of autoscaling?
• Dynamic Scaling Policies 
- based on cpu utilization
- based on memory utilization
- based on no. of request

• scheduled scaling 
- Anticipate a scaling based on known usage patterns
- Example: increase the min capacity to 10 at 5 pm on Fridays


• Predictive Scaling
- scaling based on metrics/stats from regualar monitering.






######
VPC
######

1. what is CIDR?
• Classless Inter-Domain Routing – a method for allocating IP addresses
• Used in Security Groups rules and AWS networking in general
• They help to define an IP address range:
- We’ve seen WW.XX.YY.ZZ/32 => one IP
- We’ve seen 0.0.0.0/0 => all IPs
- But we can define:192.168.0.0/26 =>192.168.0.0 – 192.168.0.63 (64 IP addresses) 

• A CIDR consists of two components 
• Base IP 
- Represents an IP contained in the range (XX.XX.XX.XX) 
- Example: 10.0.0.0, 192.168.0.0, … 
• Subnet Mask
- Defines how many bits can change in the IP 
- Example: /0, /24, /32 
• Can take two forms:				 https://www.ipaddressguide.com/cidr
- /0 = 0.0.0.0 -- all octates can change
- /8 = 255.0.0.0 -- 3 octates can change
- /16 = 255.255.0.0 -- 2 octates can change
- /24 = 255.255.255.0 -- 1 octates can change
- /32 = 255.255.255.255	-- 0 octates can change



2. public ip vs Private ip:
• The Internet Assigned Numbers Authority (IANA) established certain blocks of IPv4 addresses for the use of private (LAN) and public
(Internet) addresses

• Private IP can only allow certain values:
- 10.0.0.0 – 10.255.255.255 (10.0.0.0/8) ç in big networks
- 172.16.0.0 – 172.31.255.255 (172.16.0.0/12) ç AWS default VPC in that range
- 192.168.0.0 – 192.168.255.255 (192.168.0.0/16) ç e.g., home networks

• All the rest of the IP addresses on the Internet are Public




3. what is vpc?
• VPC = Virtual Private Cloud
• You can have multiple VPCs in an AWS region (max. 5 per region – soft limit)

• Max. CIDR per VPC is 5, for each CIDR:
- Min. size is /28 (16 IP addresses)
- Max. size is /16 (65536 IP addresses)

• Because VPC is private, only the Private IPv4 ranges are allowed:
- 10.0.0.0 – 10.255.255.255 (10.0.0.0/8)
- 172.16.0.0 – 172.31.255.255 (172.16.0.0/12)
- 192.168.0.0 – 192.168.255.255 (192.168.0.0/16)

• Your VPC CIDR should NOT overlap with your other networks (e.g., corporate)




4. what is subnet?
• A subnet, or subnetwork, is a network inside a network.

• AWS reserves 5 IP addresses (first 4 & last 1) in each subnet
• These 5 IP addresses are not available for use and can’t be assigned to an EC2 instance
• Example: if CIDR block 10.0.0.0/24, then reserved IP addresses are:
- 10.0.0.0 – Network Address
- 10.0.0.1 – reserved by AWS for the VPC router
- 10.0.0.2 – reserved by AWS for mapping to Amazon-provided DNS
- 10.0.0.3 – reserved by AWS for future use
- 10.0.0.255 – Network Broadcast Address. AWS does not support broadcast in a VPC, therefore the address is reserved

• Exam Tip, if you need 29 IP addresses for EC2 instances:
- You can’t choose a subnet of size /27 (32 IP addresses, 32 – 5 = 27 < 29) this is less than 27
- You need to choose a subnet of size /26 (64 IP addresses, 64 – 5 = 59 > 29)



5. what is IGW/internet gateway?
• Allows resources (e.g., EC2 instances) in a VPC connect to the Internet
• It scales horizontally and is highly available and redundant
• Must be created separately from a VPC
• One VPC can only be attached to one IGW and vice versa

• Internet Gateways on their own do not allow Internet access…
• Route tables must also be edited!




6. give create vpc and use internet for public subnets?
- create vpc << create subnets for AZs << create routables << add/associate subnets to RT << create IGW 
- create new instance with above VPC & do ssh connect, you should be able to connect.


7. give create vpc and use internet for private subnets?
- create vpc << create subnets for AZs << create routables << add/associate subnets to RT << create IGW 
- create new instance with above VPC & do ssh connect, you should be able to connect.




8. what is bastion host?
• We can use a Bastion Host to SSH into our private EC2 instances
• The bastion is in the public subnet which is then connected to all other private subnets
• Bastion Host security group must allow inbound from the internet on port 22 from restricted CIDR, for example the public
CIDR of your corporation
• Security Group of the EC2 Instances must allow the Security Group of the Bastion Host, or the private IP of the Bastion host




9. what is NAT instances?
• NAT = Network Address Translation
• Allows EC2 instances in private subnets to connect to the Internet
• Must be launched in a public subnet
• Must disable EC2 setting: Source /
destination Check
• Must have Elastic IP attached to it
• Route Tables must be configured to route traffic from private subnets to the NAT Instance

		

10. what is nat gateway?
• AWS-managed NAT, higher bandwidth, high availability, no administration
• Pay per hour for usage and bandwidth
• NATGW is created in a specific Availability Zone, uses an Elastic IP
• Can’t be used by EC2 instance in the same subnet (only from other subnets)
• Requires an IGW (Private Subnet => NATGW => IGW)
• 5 Gbps of bandwidth with automatic scaling up to 45 Gbps
• No Security Groups to manage / required


11.	    NAT gateway				          vs 			      NAT instances
-  1. Highly available within AZ (create in another AZ)		1. Use a script to manage failover between instances
   2. Up to 45 Gbps 						2. Depends on EC2 instance type
   3. Managed by AWS 						3. Managed by you
   4. Per hour & amount of data transferred 			4. Per hour, EC2 instance type and size
   5. no SG management required					5. SG management required	
   6. does not Use as Bastion Host				6. Uses as Bastion Host



12. what is NACL?
• NACL are like a firewall which control traffic from and to subnets
• One NACL per subnet, new subnets are assigned the Default NACL
• You define NACL Rules:
- Rules have a number (1-32766),                              ** lesser the no. = more priority **
- First rule match will drive the decision
• Newly created NACLs will deny everything

• *** NACL are a great way of blocking a specific IP address at the subnet level ***

• *** DEFAULT Accepts everything inbound/outbound with the subnets it’s associated with ***




13. what is statefull and stateless?
• statefull -- it means if the request makes through inbound of SG then it will auto allow traffic's outbound & vise versa eg: security groups.
• stateless -- it means if the request makes through inbound of NACL even then request will also be evaluated during outbound & vise versa eg: NACL.




14. 		Security Group 					vs. 				NACLs
	1. Operates at the instance level 					1. Operates at the subnet level
	2. Supports allow rules only 						    2. Supports allow rules and deny rules
	3. Stateful: return traffic is 
     automatically allowed,			              3. Stateless: return traffic must be explicitly allowed by
	   regardless of any rules.						         rules (think of ephemeral ports)
	4. All rules are evaluated before           4. Rules are evaluated in order (lowest to highest) when
     deciding whether to allow traffic.			     deciding whether to allow traffic, first match wins.
	   							                          
	5. Applies to an EC2 instance when 				  5. Automatically applies to all EC2 instances in the
	   specified by someone.								       subnet that it’s associated with.	
									
	

15. what is vpc peering ?
• Privately connect two VPCs using AWS’ network.
• Make them behave as if they were in the same network.
• Must not have overlapping CIDRs.
• VPC Peering connection is NOT transitive (A to B, B to C but also A to A to C, because b doesn’t act as connection betwn A & B)

• ** You must update route tables in each VPC’s subnets to ensure EC2 instances can communicate with each other.

• You can create VPC Peering connection between VPCs in  different AWS accounts/regions.



16. what is VPC Endpoints (AWS PrivateLink) ?
• Every AWS service is publicly exposed (public URL)
• VPC Endpoints (powered by AWS PrivateLink) allows you to connect to AWS services using a private network instead of using the public Internet
• They’re redundant and scale horizontally.

• ** They remove the need of IGW, NATGW, ... to access AWS Services.
    (No NAT, IGW, etc required that will save cost)
• In case of issues:
- Check DNS Setting Resolution in your VPC.
- Check Route Tables.



17. types of VPC endpoint ?
1) Interface Endpoints (powered by PrivateLink)
• Provisions an ENI (private IP address) as an entry point (must attach a Security Group)
• Supports most AWS services
• $ per hour + $ per GB of data processed

2) Gateway Endpoints
• Provisions a gateway and must be used as a target in a route table (does not use security groups)
• Only Supports both S3 and DynamoDB
• Free



18. what is VPC Flow logs ?
• Capture information about IP traffic going into your interfaces:
- VPC Flow Logs
- Subnet Flow Logs
- Elastic Network Interface (ENI) Flow Logs

• Helps to monitor & troubleshoot connectivity issues
• Flow logs data can go to S3, CloudWatch Logs, and Kinesis Data Firehose
• Captures network information from AWS managed interfaces too: ELB, 
RDS, ElastiCache, Redshift, WorkSpaces, NATGW, Transit Gateway...




19. what is AWS Site-to-Site VPN ?
- used to connect VGW (server side) & CGW (client/data center side)
- eg:- to connect and outside data center to your ec2 instance privately.
- enable Route Propagation for the Virtual Private Gateway in the route table that is associated with your subnets
- If you need to ping your EC2 instances from on-premises, make sure you add the ICMP protocol on the inbound of your security groups.

1) Virtual Private Gateway (VGW).
• VPN concentrator on the AWS side of the VPN connection.
• VGW is created and attached to the VPC from which you want to create the Site-to-Site VPN connection.
• Possibility to customize the ASN (Autonomous System Number)

2) Customer Gateway (CGW).
• Software application or physical device on customer side of the VPN connection.
• Requries:
- usage Public Internet-routable IP address for your Customer Gateway device.




20. what is AWS VPN CloudHub ?
• Provide secure communication between multiple sites, if you have multiple VPN connections.
• Low-cost for primary or secondary network connectivity between different locations (VPN only)
• It’s a VPN connection so it goes over the public Internet
• To set it up, connect multiple VPN connections on the same VGW, setup dynamic routing and configure route tables




21. what is Direct Connect (DX)
• Provides a dedicated private connection from a remote network to your VPC.

• Dedicated connection must be setup between your DC and AWS Direct Connect locations.
• You need to setup a Virtual Private Gateway on your VPC.
• Access public resources (S3) and private (EC2) on same connection.
• Supports both IPv4 and IPv6

• ** often requires longer than 1 month to establish a new connection.


• Use Cases:
- Increase bandwidth throughput - working with large data sets – lower cost
- More consistent network experience - applications using real-time data feeds
- Hybrid Environments (on prem + cloud)

*** NOTE:-
•In case Direct Connect fails, you can set up a backup Direct Connect connection (expensive), or a Site-to-Site VPN connection



22. what is Direct Connect Gateway ?
• If you want to setup a Direct Connect to one or more VPC in many different regions (same account), 
  you must use a Direct Connect Gateway.



23. Direct Connect – Encryption 
• Data in transit is not encrypted but is private.
• AWS Direct Connect + VPN provides an IPsec-encrypted private connection.
• Good for an extra level of security, but slightly more complex to put in place.




24. what is Transit Gateway ?
• used to connecting more than one VPC, without defining peering between them.

• For having transitive peering between thousands of VPC and on-premises, hub-and-spoke (star) connection
• Regional resource, can also work cross-region 
• Share cross-account using Resource Access Manager (RAM)
• You can peer Transit Gateways across regions
• Route Tables: limit which VPC can talk with other VPC
• Works with Direct Connect Gateway, VPN connections
• Supports IP Multicast (not supported by any other AWS service)




25. Transit Gateway: Site -to-Site VPN ECMP ?
• ECMP = Equal-cost multi-path routing
• Routing strategy to allow to forward a packet over multiple best path.





26. what is VPC – Traffic Mirroring ? 
• Allows you to capture and inspect network traffic in your VPC.
• Capture the traffic
- From (Source) – ENIs
- To (Targets)  – an ENI or a Network Load Balancer

• Source and Target can be in the same VPC or different VPCs (VPC Peering)






27. what if we want to protect in a sophisticated way our entire VPC ?
- Use firewall, this will protect your whole VPC

• From Layer 3 to Layer 7 protection 
• Any direction, you can inspect
- VPC to VPC traffic
- Outbound to internet
- Inbound from internet
- To / from Direct Connect & Site -to-Site VPN

• Internally, the AWS Network Firewall uses the AWS Gateway Load Balancer.
• Rules can be centrally managed cross-account by AWS Firewall Manager to apply to many VPCs.






28. What is Network Protection on AWS ?
• To protect network on AWS, we’ve seen
- Network Access Control Lists (NACLs)
- Amazon VPC security groups
- AWS WAF (protect against malicious requests)
- AWS Shield & AWS Shield Advanced
- AWS Firewall Manager (to manage them across accounts)
• But what if we want to protect in a sophisticated way our entire VPC?




***********************************************************************************************




27. full VPC summary ?   
• CIDR – IP Range
• VPC – Virtual Private Cloud => we define a list of IPv4 & IPv6 CIDR
• Subnets – tied to an AZ, we define a CIDR
• Internet Gateway – at the VPC level, provide IPv4 & IPv6 Internet Access 
• Route Tables – must be edited to add routes from subnets to the IGW, VPC Peering Connections, VPC Endpoints, ...
• Bastion Host – public EC2 instance to SSH into, that has SSH connectivity to EC2 instances in private subnets
• NAT Instances – gives Internet access to EC2 instances in private subnets. Old, 
  must be setup in a public subnet, disable Source / Destination check flag.
• NAT Gateway – managed by AWS, provides scalable Internet access to private EC2 instances, IPv4 only

• NACL – stateless, subnet rules for inbound and outbound, don’t forget Ephemeral Ports
• Security Groups – stateful, operate at the EC2 instance level
• VPC Peering – connect two VPCs with non overlapping CIDR, non-transitive
• VPC Endpoints – provide private access to AWS Services (S3, DynamoDB, CloudFormation, SSM) within a VPC
• VPC Flow Logs – can be setup at the VPC / Subnet / ENI Level, for ACCEPT and REJECT traffic, 
  helps identifying attacks, analyze using Athena or CloudWatch Logs Insights.
• Site-to-Site VPN – setup a Customer Gateway on DC, a Virtual Private Gateway on VPC, and site-to-site VPN over public Internet
• AWS VPN CloudHub – hub-and-spoke VPN model to connect your sites

• Direct Connect – setup a Virtual Private Gateway on VPC, and establish a direct private connection to an AWS Direct Connect Location
• Direct Connect Gateway – setup a Direct Connect to many VPCs in different AWS regions
• AWS PrivateLink / VPC Endpoint Ser vices:•Connect services privately from your service VPC to customers VPC
• Doesn’t need VPC Peering, public Internet, NAT Gateway, Route Tables
• Must be used with Network Load Balancer & ENI
• ClassicLink – connect EC2-Classic EC2 instances privately to your VPC
• Transit Gateway – transitive peering connections for VPC, VPN & DX
• Traffic Mirroring – copy network traffic from ENIs for further analysis
• Egress-only Internet Gateway – like a NAT Gateway, but for IPv6


************************************************************************************************








#######
RDS:
#######

1. what is RDS?
- RDS stands for Relational Database Service
- It’s a managed DB service for DB use SQL as a query language. 
- It allows you to create databases in the cloud that are managed by AWS:-
•Postgres
•MySQL
•MariaDB
•Oracle
•Microsoft SQL Server
•Aurora (AWS Proprietary database)


2. Advantage over using RDS versus deploying DB on EC2?
• RDS is a managed service:
- Automated provisioning, OS patching
- Continuous backups and restore to specific timestamp (Point in Time Restore)!
- Monitoring dashboards
- Read replicas for improved read performance
- Multi AZ setup for DR (Disaster Recovery)
- Maintenance windows for upgrades
- Scaling capability (vertical and horizontal)
- Storage backed by EBS (gp2 or io1)
• BUT you can’t SSH into your instances


3. RDS – Storage Auto Scaling ?
• Helps you increase storage on your RDS DB instance dynamically
• When RDS detects you are running out of free database storage, it scales automatically
• Avoid manually scaling your database storage
• You have to set  Maximum Storage Threshold (maximum limit for DB storage)
• Automatically modify storage if:
- Free storage is less than 10% of allocated storage
- Low-storage lasts at least 5 minutes
- 6 hours have passed since last modification
• Useful for applications with unpredictable workloads
• Supports all RDS database engines (MariaDB, MySQL, PostgreSQL, SQL Server, Oracle)


4. RDS (Read Replicas) for read scalability?
• Up to 15 Read Replicas
• Within AZ, Cross AZ or Cross Region
• Replication is ASYNC, so reads are eventually consistent
• Replicas can be promoted to their own DB
• Applications must update the connection string to leverage read replicas


5. RDS Read Replicas – Use Cases ?
• You have a production database that is taking on normal load
• You want to run a reporting application to run some analytics
• You create a Read Replica to run the new workload there
• The production application is unaffected
• Read replicas are used for SELECT (=read) only kind of statements (not INSERT, UPDATE, DELETE)


6. RDS Read Replicas – Network Cost?
- no cost for data transfer from one AZ to another.
- have to pay cost for data transfer from one Region to another.


7. SYNC replication vs ASYNC replication?
- SYNC  -- 1) only can do one operation (read/write) at a time.  2) means data when written to main db has also to be replicated to Standby DB.
- ASYNC -- 1) can do both operation (read/write) at a time.      2) means data when written to main db automatically be in the Standby DB, 
                                                                    **but there is a delay involved **


8. RDS Multi AZ (Disaster Recovery) ?
• SYNC replication
• One DNS name – automatic app failover to standby
• Increase availability
• Failover in case of loss of AZ, loss of network, instance or storage failure
• No manual intervention in apps
• Not used for scaling
• Note:The Read Replicas be setup as Multi AZ for Disaster Recovery (DR) 


9. RDS – From Single-AZ to Multi-AZ ?
• Zero downtime operation (no need to stop the DB)
• Just click on “modify” for the  database
• The following happens internally:
- A snapshot is taken
- A new DB is restored from the snapshot in a new AZ
- Synchronization is established between the two databases





### best app for SQL database access:- SQLECTRON
### best app for SQL database backup:- Percona XtraBackup





10. RDS Custom ?
• RDS Custom = OS and database customization
• Only for Oracle and Microsoft SQL Server Database can use.
• RDS: Automates setup, operation, and scaling of database in AWS
• Custom: access to the underlying database and OS so you can•Configure settings
- Install patches
- Enable native features
- Access the underlying EC2 Instance using SSH or SSM Session Manager
• De-activate Automation Mode to perform your customization, better to take a DB snapshot before
• RDS vs. RDS Custom 
- RDS: entire database and the OS to be managed by AWS
- RDS Custom: full admin access to the underlying OS and the database


11. Amazon Aurora ?
• not open sourced.
• Postgres and MySQL are both supported as Aurora DB. (that means your drivers will work as if Aurora was a Postgres or MySQL database)
• Aurora is “AWS cloud optimized” and claims 5x performance improvement over MySQL on RDS, over 3x the performance of Postgres on RDS
• Aurora storage automatically grows in increments of 10GB, up to 128  TB. 
• Aurora can have up to 15 replicas and the replication process is faster than MySQL (sub 10 ms replica lag)
• Failover in Aurora is instantaneous. It’s HA (High Availability) native. 
• Aurora costs more than RDS (20% more) – but is more efficient


12. Advantages of Aurora ?
• has only one master.
• 6 copies of your data across 3 AZ:
- 4 copies out of 6 for writes
- 3 copies out of 6 for reads
- Self healing with peer-to-peer replication
- Storage is striped across 100s of volumes
• One Aurora Instance takes writes (master)
• Automated failover for master in less than 30 seconds
• Master + up to 15 Aurora Read Replicas serve reads
• Support for Cross Region Replication

## NOTE:-
1. Reader Endpoint -- acts as Connection Load Balancing, so that read replicas can be found by the client easily in case of AS.
2. Writer Endpoint -- Pointing to the master


13. RDS Backups  
• Automated backups:   -- backup is done in every 5 minutes
- Daily full backup of the database (during the backup window)
- Transaction logs are backed -up by RDS every 5 minutes
- => ability to restore to any point in time (from oldest backup to 5 minutes ago)
- 1 to 35 days of expire, set 0 to disable automated backups

• Manual DB Snapshots: (don’t expire)
- Manually triggered by the user
- Retention of backup for as long as you want

• Trick: in a stopped RDS database, you will still pay for storage. If you plan on stopping it for a long time, 
         you should snapshot & restore instead



14. RDS & Aurora Restore options ?
• Restoring a RDS / Aurora backup or a snapshot creates a new database
• Restoring MySQL RDS database from S3
- Create a backup of your on-premises database
- Store it on Amazon S3 (object storage)
- Restore the backup file onto a new RDS instance running MySQL
• Restoring MySQL Aurora cluster from S3
- Create a backup of your on-premises database using Percona XtraBackup
- Store the backup file on Amazon S3
- Restore the backup file onto a new Aurora cluster running MySQL


15. RDS & Aurora Security?
• At-rest encryption:
- Database master & replicas encryption using AWS KMS – must be defined as launch time
- If the master is not encrypted, the read replicas cannot be encrypted
- To encrypt an un -encrypted database, go through a DB snapshot & restore as encrypted
• In-flight encr yption: TLS-ready by default, use the AWS TLS root certificates client-side
• IAM Authentication: IAM roles to connect to your database (instead of username/pw)
• Security Groups: Control Network access to your RDS / Aurora DB
• No SSH available except on RDS Custom
• Audit Logs can be enabled and sent to CloudWatch Logs for longer retention



16. Amazon RDS Proxy?
• ** Fully managed database proxy for RDS
• ** Allows apps to pool and share DB connections established with the database
• Improving database efficiency by reducing the stress on database resources (e.g., CPU, RAM) and minimize open connections (and timeouts)
• Serverless, autoscaling, highly available (multi-AZ)

• ** Reduced RDS & Aurora failover time by up 66%

• Supports RDS (MySQL, PostgreSQL, MariaDB, MS SQL Server) and Aurora (MySQL, PostgreSQL)

• No code changes required for most apps
• ** Enforce IAM Authentication for DB, and securely store credentials in AWS Secrets Manager
• *** RDS Proxy is never publicly accessible (must be accessed from VPC) ***




17. Amazon ElastiCache ?
• Helps relieve load in RDS

• The same way RDS is to get managed Relational Databases, ElastiCache is to get managed Redis or Memcached
• Caches are in-memory databases with really high performance, low latency

• *** Helps make your application stateless

• AWS takes care of OS maintenance / patching, optimizations, setup, configuration, monitoring, failure recovery and backups
• Using ElastiCache involves heavy application code changes

# Advantage of elastiCache:-
• Applications queries ElastiCache, if not available, get from RDS  and store in ElastiCache.
• Helps relieve load in RDS
• Cache must have an invalidation strategy to make sure only the most current data is used in there.



18. ElastiCache – Redis vs Memcached

1. REDIS:-
• Multi AZ with Auto-Failover
• Read Replicas to scale reads and have high availability
• Data Durability using AOF persistence
• Backup and restore features
• Supports Sets and Sorted Sets

2. MEMCACHED:-
• Multi-node for partitioning of data (sharding)
• No high availability (replication)
• Non persistent
• No backup and restore
• Multi-threaded architecture



19. ElastiCache – Cache Security
• ElastiCache supports IAM Authentication for Redis
• IAM policies on ElastiCache are only used for AWS API-level security

• Redis AUTH:
- You can set a “password/token” when you create a Redis cluster
- This is an extra level of security for your cache (on top of security groups)
- Support SSL in flight encryption

• Memcached
- Supports SASL-based authentication (advanced)



20. Patterns for ElastiCache ?
• Lazy Loading:       all the read data is cached, data can become stale in cache
• Write Through:      Adds or update data in the cache when written to a DB (no stale data)
• Session Store:      store temporary session data in a cache (using TTL features)


21. important ports ?
• Important ports:
- FTP: 21
- SSH: 22
- SFTP: 22 (same as SSH)
- HTTP: 80
- HTTPS: 443

• vs RDS Databases ports:
- PostgreSQL: 5432
- MySQL: 3306
- Oracle RDS: 1521
- MSSQL Server: 1433
- MariaDB: 3306 (same as MySQL)
- Aurora: 5432 (if PostgreSQL compatible) or 3306 (if MySQL compatible)






#######
S3:
#######


1. what is S3 ?
• It is ”infinitely scaling” storage in AWS.
• Global service, but bucket are created regionally.

• Many websites use Amazon S3 as a backbone
• Many AWS services use Amazon S3 as an integration as well
• We’ll have a step-by-step approach to S3



2. Amazon S3 Use cases ?
• Backup and storage
• Disaster Recovery
• Archive
• Hybrid Cloud storage
• Application hosting
• Media hosting
• Data lakes & big data analytics
• Software delivery
• Static website



3. what is s3 bucket ?
• Amazon S3 allows people to store objects (files) in “buckets”
• Buckets must have a globally unique name
• S3 looks like a global service but buckets are created in a region
• Naming convention
- No uppercase, No underscore
- 3-63 characters long
- Not an IP
- Must start with lowercase letter or number




4. what are S3 - Objects ?
• Objects (files) have a Key

• The key is the FULL path:
- s3://my-bucket/my_file.txt
- s3://my-bucket/my_folder1/another_folder/my_file.txt

• The key is composed of prefix + object name
- s3://my-bucket/my_folder1/another_folder/my_file.txt

• Max. Object Size is 5TB (5000GB)

• If uploading more than 5GB, must use “multi-part upload”
- Can help parallelize uploads (speed up transfers)

• Version ID (if versioning is enabled)





5. Amazon S3 – Security ?
1) User-Based:
-IAM Policies – which API calls should be allowed for a specific user from IAM

2) Resource-Based:
- Bucket Policies – bucket wide rules from the S3 console - allows cross account
- Object Access Control List (ACL) – finer grain (can be disabled)
- Bucket Access Control List (ACL) – less common (can be disabled)

3) Encryption: encrypt objects in Amazon S3 using encryption keys

• Note: an IAM principal can access an S3 object if
- The user IAM permissions ALLOW it OR the resource policy ALLOWS it
- AND there’s no explicit DENY




6. S3 Bucket Policies ?
• JSON based policies:
- Resources: buckets and objects
- Effect: Allow / Deny
- Actions: Set of API to Allow or Deny
- Principal: The account or user to apply the policy to




7. S3 bucket for policy use ?
- Grant public access to the bucket
- Force objects to be encrypted at upload
- Grant access to another account (Cross Account)




8. why is static website in s3 Showing 403 error on web browser ?
- If you get a 403 Forbidden error, make sure the bucket policy allows public reads.




9. Amazon S3 - Versioning ?
• You can version your files in Amazon S3 to keep every change as a vesion & if needed can be restored.
• It is enabled at the bucket level.

• It is best practice to version your buckets
- Protect against unintended deletes (ability to restore a version)
- Easy roll back to previous version.




• Notes: **************
- Any file that is not versioned prior to enabling versioning will have version “null”
- Suspending versioning does not delete the previous versions





10. Amazon S3 – Replication (CRR & SRR)
• Must enable Versioning in source and destination buckets
• Cross-Region Replication (CRR)
• Same-Region Replication (SRR)
• Buckets can be in different AWS accounts
• Copying is asynchronous/will take time.
• Must give proper IAM permissions to S3
• After you enable Replication, only new objects are replicated

• Use cases:
- CRR – compliance, lower latency access, replication across accounts
- SRR – log aggregation, live replication between production and test accounts


• NOTE: ******************************
- Optionally, you can replicate existing objects using S3 Batch Replication




11. types of S3 Storage Classes ?
1) Amazon S3 Standard - General Purpose
• No health check available   ******************
• 99.99% Availability
• Used for frequently accessed data
• Low latency and high throughput
• Sustain 2 concurrent facility failures
• Use Cases: Big Data analytics, mobile & gaming applications, content distribution...

2) Amazon S3 Standard-Infrequent Access (IA)
• For data that is less frequently accessed, but requires rapid access when needed
• Lower cost than S3 Standard

3) Amazon S3 Intelligent Tiering
• Small monthly monitoring and auto-tiering fee
• Moves objects automatically between Access Tiers based on usage
• There are no retrieval charges in S3 Intelligent-Tiering

4) Amazon S3 One Zone-Infrequent Access
• High durability (99.999999999%) in a single AZ; 
• data lost when AZ is destroyed
• 99.5% Availability
• Use Cases: Storing secondary backup copies of on-premises data, or data you can recreate

5) Amazon S3 Glacier Instant Retrieval
• Millisecond retrieval, great for data accessed once a quarter
• Minimum storage duration of 90 days

6) Amazon S3 Glacier Flexible Retrieval
• Expedited (1 to 5 minutes), Standard (3 to 5 hours), Bulk (5 to 12 hours) – free
• Minimum storage duration of 90 days

7) Amazon S3 Glacier Deep Archive
• for long term storage
• Standard (12 hours), Bulk (48 hours)
• Minimum storage duration of 180 days

NOTE:  ********************
- Can move between classes manually or using S3 Lifecycle configurations


12. Amazon S3 – Lifecycle Rules ?
• Transition Actions – configure objects to transition to another storage class
- eg: Move objects to Standard IA class 60 days after creation
- eg: Move to Glacier for archiving after 6 months

• Expiration actions – configure objects to expire (delete) after some time
- eg: Access log files can be set to delete after a 365 days
- eg: Can be used to delete old versions of files (if versioning is enabled)




13. Amazon S3 Analytics/Storage Class Analysis ?
• Help you decide when to transition objects to the right storage class

• Recommendations for Standard and Standard IA
• Report is updated daily
• 24 to 48 hours to start seeing data analysis 




14. what is S3 – Requester Pays ?
• In general, bucket owners pay for all Amazon S3 storage and data transfer costs associated with their bucket.
• With Requester Pays buckets, instead of the bucket owner, the requester pays the cost of the request &
  data download from the bucket.



15. S3 Event Notifications ?
• Notifications about S3:ObjectCreated, S3:ObjectRemoved, S3:ObjectRestore, S3:Replication...

• Can create as many “S3 events” as desired
• Object name filtering possible (*.jpg)
• Use case: generate thumbnails of images uploaded to S3

• Works with:
- SNS
- SQS 
- Lambda Function




16. what is S3 Transfer Acceleration ?
• Increase transfer speed by transferring file to an AWS *** edge location *** which 
  will forward the data to the S3 bucket in the target region.
• Compatible with multi-part upload.




17. what is S3 batch operations ?
• Perform bulk operations on existing S3 objects with a single request, example:
- Modify object metadata & properties.
- Copy objects between S3 buckets.
- Encrypt/un-encrypted objects.
- Modify ACLs, tags.
- Restore objects from S3 Glacier.
- Invoke Lambda function to perform custom action on each object.




18. S3 – Object Encryption ?
• You can encrypt objects in S3 buckets using one of 4 methods:

• Server-Side Encr yption (SSE)
1) Server-Side Encr yption with Amazon S3-Managed Keys (SSE-S3)
- Enabled by Default
- Encrypts S3 objects using keys handled, managed, and owned by AWS

2) Server-Side Encryption with KMS Keys stored in AWS KMS (SSE-KMS)
- Leverage AWS Key Management Service (AWS KMS) to manage encryption keys

3) Server-Side Encr yption with Customer-Provided Keys (SSE-C)
- When you want to manage your own encryption keys

4) Client-Side Encryption




19. S3 – Encryption in transit (SSL/TLS) ?
• Encryption in flight is also called SSL/TLS 

• Amazon S3 exposes two endpoints:
- HTTP Endpoint – non encrypted
- HTTPS Endpoint – encryption in flight

• HTTPS is recommended
• HTTPS is mandator y for SSE-C
• Most clients would use the HTTPS endpoint by default




20. What is CORS?
• Cross-Origin Resource Sharing (CORS)
• Origin = scheme (protocol) + host (domain) + port
• The requests won’t be fulfilled unless the other origin allows for the 
  requests, using CORS Headers (example: Access-Control-Allow-Origin)
• we need to enable the correct CORS headers




21. S3 MFA Delete ?
• MFA (Multi-Factor Authentication) – force users to generate a code on a device before doing important operations on S3.
- eg: 1) Permanently delete an object version 2) Suspend Versioning on the bucket

• To use MFA Delete,  Versioning must be enabled on the bucket
• Only the bucket owner (root account) can enable/disable MFA Delete




22. S3 Access Logs ?
• For audit purpose, you may want to log all access to S3 buckets.
• Any request made to S3, from any account, authorized or denied, will be logged into another S3 bucket.




23. S3 – Pre-Signed URLs ?
• Users given a pre-signed URL get the permissions of the user that generated the URL for GET/PUT.
• once work is done the url expires.




24. S3 Glacier Vault Lock ?
• Adopt a WORM (Write Once Read Many) model
• Create a Vault Lock Policy
• Lock the policy for future edits (can no longer be changed or deleted)
• Helpful for compliance/no deletion and data retention
• versioning must be enabled.

# have 2 rention modes:
1) Compliance:
• Object versions can't be overwritten/deleted by any user, including the root user
• Objects retention modes can't be changed, and retention periods can't be shortened

2) Governance:
• Most users can't overwrite or delete an object version or alter its lock settings 
• Some users have special permissions to change the retention or delete the object




25. S3 Access Points ?
• Access Points simplify security management for S3 Buckets
• Each Access Point has:
- its own DNS name (Internet Origin or VPC Origin)










#######
ROUTE-53:
#######

1. How does HTTPS work when you hit www.google.com/a web page ?
1) DNS Resolution:
- Your browser first resolves the domain name (e.g., www.google.com) to an IP address using DNS, just like in the HTTP version.

2) SSL/TLS Handshake:
- Before any data is exchanged, an SSL/TLS (Secure Sockets Layer/Transport Layer Security) handshake occurs 
  between your browser and the web server. This handshake establishes a secure encrypted connection.

a. ClientHello: Your browser initiates the handshake by sending a "ClientHello" message to the server, indicating its support for specific encryption algorithms and other details.
b. ServerHello: The web server responds with a "ServerHello" message, selecting a mutually supported encryption method.
c. Key Exchange: During this phase, the server sends its public key to the browser. This key is used to encrypt a symmetric session key, which will be used for encrypting and decrypting the actual data.
d. Certificate Validation: Your browser checks the server's SSL/TLS certificate to ensure that it's valid and issued by a trusted certificate authority (CA).
e. Finished: Both the server and the client exchange "Finished" messages to confirm that the handshake is complete.

3) Encrypted Data Transfer:
- After the SSL/TLS handshake is successful, all data exchanged between your browser and the server is encrypted. This includes the HTTP request for the webpage and the response from the server.

4) HTTP Request:
- Your browser sends the encrypted HTTP GET request to the server.

5)Server Processing:
- The server processes the request and generates an HTML page, just like in the HTTP version. This happens on the server side and is not affected by the encryption.

6)Encrypted Response:
- The server sends the HTML response back to your browser in an encrypted form.

7) Decryption and Rendering:
- Your browser decrypts the response using the session key generated during the SSL/TLS handshake. It then proceeds to render the page and fetch and process any additional resources (like images, stylesheets, and scripts) in encrypted form.

8) Caching:
- Caching can still occur with HTTPS. Your browser may cache encrypted resources locally to improve loading times on subsequent visits.

9) Rendering and Interaction:
- The browser renders the page and allows you to interact with it just as it does in the HTTP version.




2. What is DNS?
• Domain Name System which translates the human friendly hostnames into the machine IP addresses
• www.google.com => 172.217.18.36
• DNS is the backbone of the Internet
• DNS uses hierarchical naming structure
- .com            = Top Level Domain (TLD): .com, .us, .in, .gov, .org, ...
- example.com     = Second Level Domain (SLD): amazon.com, google.com, ...
- www.example.com = subdomain
- api.example.com = fully qualified Domain Name.




3. what is Amazon Route 53 ?
• A highly available, scalable, fully managed and Authoritative DNS
• Route 53 is also a Domain Registrar
• Ability to check the health of your resources
• The only AWS service which provides 100% availability




4. Route 53 – Records ?
• How you want to route traffic for a domain

• Each record contains:
- Domain/subdomain Name – e.g., example.com
- Record Type – e.g., A or AAAA
- Value – e.g., 12.34.56.78
- Routing Policy – how Route 53 responds to queries
- TTL – amount of time the record cached at DNS Resolvers




5. Record Types ?
• A – maps a hostname to IPv4
• AAAA – maps a hostname to IPv6

• CNAME – maps a hostname to another hostname
- The target is a domain name which must have an A or AAAA record
- Can’t create a CNAME record for the top node of a DNS namespace (Zone Apex)
- Example: you can’t create for example.com, but you can create for www.example.com

• NS – Name Servers for the Hosted Zone
- Control how traffic is routed for a domain




6. what is Hosted Zones in R-53 ?
• A container for records that define how to route traffic to a domain and its subdomains.

• has 2 types:-
1) Public Hosted Zones.   -- contains records that specify how to route traffic on the Internet.
2) Private Hosted Zones.  -- contain records that specify how you route traffic within one or more VPCs.

•You pay $0.50 per month per hosted zone




7. what is Records TTL (Time To Live) ?
• High TTL – e.g., 24 hr
- Less traffic on Route 53
- Possibly outdated records

• Low TTL – e.g., 60 sec.
- More traffic on Route 53 ($$)
- Records are outdated for less time
- Easy to change records

• Except for Alias records, TTL is mandatory for each DNS record.





8. CNAME vs Alias ?
1) CNAME -- can host only = app.mydomain.com

2) Alias -- can host only = mydomain.com
         -- Free of charge.
         -- You can’t set the TTL.      ********
         -- Alias Record is always of type A/AAAA for AWS resources.
         -- Unlike CNAME, it can be used for the top node of a DNS namespace (Zone Apex), 
            e.g.: example.com





9. Routing Policies ?
• Define how Route 53 responds to DNS queries. (not like Route table routing)
• DNS does not route any traffic, it only responds to the DNS queries

• Types of Routing Policies in Route 53 ?
1) Simple
• Typically, route traffic to a single resource
• Can specify multiple values in the same record
• If multiple values are returned, a random one is chosen by the client
• When Alias enabled, specify only one AWS resource
• Can’t be associated with Health Checks

2) Weighted
• Control the % of the requests that go to each specific resource
• DNS records must have the same name and type
• Can be associated with Health Checks
• Use cases: load balancing between regions, testing new application versions...
• Assign a weight of 0 to a record to stop sending traffic to a resource
• If all records have weight of 0, then all records will be returned equally

3) Failover
• Routes data/traffic to backup/standby machine/EC-2 instance in case main one fails.

4) Latency based
• Redirect to the resource that has the least latency close to us
• Super helpful when latency for users is a priority 
• Latency is based on traffic between users and AWS Regions

5) Geolocation  
• Different from Latency-based! 
• This routing is based on user location

6) Multi-Value Answer
• Use when routing traffic to multiple resources
• Route 53 return multiple values/resources
• Can be associated with Health Checks (return only values for healthy resources)
• Up to 8 healthy records are returned for each Multi-Value query
• Multi-Value is not a substitute for having an ELB

7) Geoproximity (using Route 53 Traffic Flow feature)
• divide and who get max portion depends on BIAS (1-99 or -1 to -99)
• greater the BIAS of Machine/EC-2 greater will be the traffic routed towards it.
• You must use Route 53 Traffic Flow to use this feature




10. Route 53 – Health Checks ?
• HTTP Health Checks are only for public resources

• Health Check => Automated DNS Failover :
1. Health checks that monitor an endpoint (application, server, other AWS resource)
2. Health checks that monitor other health checks (Calculated Health Checks) OR, AND, or NOT
3. Health checks that monitor CloudWatch Alarms 

• Health Checks are integrated with CW metrics.





11. how to Health Checks – Private Hosted Zones ?
• Route 53 health checkers are outside the VPC
• They can’t access private endpoints (private VPC or on-premises resource)

• You can create a  CloudWatch Metric and associate a CloudWatch Alarm, then create a  
  Health Check that checks the alarm itself.